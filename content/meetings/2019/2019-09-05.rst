---
title:    Meeting 5 September 2019
author:   Gleb Dolgich
date:     2019-09-05
tags:
    - WG21
    - Mailing
    - Epochs
    - Vittorio Romeo
    - CppCast
    - Rust
    - VCPkg
    - {fmt}
    - Boost
    - Lambdas
    - Webdev
    - Drogon
    - Peter Sommerlad
---

Meeting 5 September 2019
========================

Post-Cologne Mailing
--------------------

http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2019/#mailing2019-08

* Reddit: https://www.reddit.com/r/cpp/comments/crg1dr/c_standards_committee_papers_201908_postcologne/

Arthur O'Dwyer https://quuxplusone.github.io/blog/2019/08/18/post-cologne-mailing/

* Reddit: https://www.reddit.com/r/cpp/comments/cs5qmf/the_postcologne_mailing_is_out/

CppCast: C++ Epochs with Vittorio Romeo
---------------------------------------

https://cppcast.com/vittorio-romeo-epochs/

https://www.reddit.com/r/cpp/comments/cxbkae/cppcast_c_epochs/

Article:
https://vittorioromeo.info/index/blog/fixing_cpp_with_epochs.html

Rust vs. C++
------------

Reddit: `Is the C++ committee or any key influencers in the C++ community working on anything to
tackle the advantages that Rust has over C++ (eg. Rust's borrow checking, compiler-checked
concurrency safety and cargo package management)
<https://www.reddit.com/r/cpp/comments/crh7lh/is_the_c_committee_or_any_key_influencers_in_the/>`_

Vcpkg: 2019.07 Update
---------------------

https://devblogs.microsoft.com/cppblog/vcpkg-2019-07-update/

https://www.reddit.com/r/cpp/comments/cqta79/vcpkg_201907_update/

  Hopefully you will not require specific versions of packages, as the workflow of vcpkg doesn't
  really support the (very common) scenario well.

{fmt} V6.0.0 released
---------------------

https://github.com/fmtlib/fmt/releases/tag/6.0.0

https://www.reddit.com/r/cpp/comments/cvogos/fmt_60_released_with_format_string_compilation/

Cpp.Chat: https://youtu.be/PIeLO-H9ZZE

CppCast: https://cppcast.com/victor-zverovich/

Boost 1.71 released
-------------------

https://www.boost.org/users/history/version_1_71_0.html

* NEW: **Variant2**: A never-valueless, strong guarantee implementation of ``std::variant``, from
  Peter Dimov.
* Reddit https://www.reddit.com/r/cpp/comments/csj2ql/boost_version_1710/

OSes built using C++
--------------------

Reddit: https://www.reddit.com/r/cpp/comments/cho1qb/are_there_any_oses_built_using_c/

* `TempleOS <https://github.com/DivineSystems/DivineOS>`_
* `Haiku <https://www.haiku-os.org/>`_
* `Google Fuchsia <https://fuchsia.dev/>`_
* `IncludeOS <https://www.includeos.org/>`_
* `DistortOS <http://distortos.org/>`_ (RTOS)
* `Symbian OS <https://github.com/SymbianSource>`_ (Dead)
* `SerenityOS <https://github.com/SerenityOS/serenity>`_

Lambdas vs. Closures
--------------------

`Scott Meyers <http://scottmeyers.blogspot.com/2013/05/lambdas-vs-closures.html>`_

* Reddit: https://www.reddit.com/r/cpp/comments/cqo05i/lambdas_vs_closures_scott_meyers/

Web Framework Benchmarks
------------------------

https://www.techempower.com/benchmarks/#section=test&runid=26a79c95-5eec-4572-8c94-dd710df659d7&hw=ph&test=update

* Reddit: https://www.reddit.com/r/cpp/comments/csa0sg/drogonc17_becomes_one_of_the_fastest_web/

https://github.com/an-tao/drogon

**Drogon**: A C++14/17 based HTTP web application framework running on Linux/macOS/Unix

Introducing the Rule of DesDeMovA
---------------------------------

Blog post by Peter Sommerlad

https://blog.safecpp.com/2019/07/01/initial.html

https://accu.org/content/conf2014/Howard_Hinnant_Accu_2014.pdf

Rule of Zero:

    Code that you do not write cannot be wrong.

.. image:: /img/sommerlad-desdemova1.png

.. image:: /img/sommerlad-desdemova2.png

.. image:: /img/sommerlad-desdemova3.png

(C++ developers are really bad at naming things.)

Twitter: Neural Proposals
-------------------------

.. image:: /img/neural-proposals.png
