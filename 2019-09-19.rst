----

Open Sourcing MSVCâ€™s STL
========================

https://devblogs.microsoft.com/cppblog/open-sourcing-msvcs-stl/

https://www.reddit.com/r/cpp/comments/d58pmg/open_sourcing_msvcs_stl/

https://github.com/microsoft/STL

How long does it take to *really* master C++?
=============================================

`Reddit	<https://reddit.com/r/cpp/comments/d4u6ag/how_long_does_it_take_to_really_master_c/>`_

	`If someone says they have mastered C++ they are lying. <https://www.reddit.com/r/cpp/comments/d4u6ag/how_long_does_it_take_to_really_master_c/f0gkd9j?utm_source=share&utm_medium=web2x>`_

	`You don't master C++. Instead C++ masters you. <https://www.reddit.com/r/cpp/comments/d4u6ag/how_long_does_it_take_to_really_master_c/f0h9fbw?utm_source=share&utm_medium=web2x>`_

The Surprising Limitations of C++ Ranges Beyond Trivial Cases
=============================================================

`Article <https://www.fluentcpp.com/2019/09/13/the-surprising-limitations-of-c-ranges-beyond-trivial-use-cases/>`_

* `Reddit <https://www.reddit.com/r/cpp/comments/d3qkas/the_surprising_limitations_of_c_ranges_beyond/>`_

Elements C++ GUI library
========================

https://www.cycfi.com/2019/07/photon-micro-gui/

* `Reddit <https://www.reddit.com/r/cpp/comments/ccq9pn/elemental_c_gui_library/>`_

C++ libraries for data visualization
====================================

* VTK https://vtk.org/
* ROOT https://root.cern.ch/
* matplotlib-cpp https://github.com/lava/matplotlib-cpp
  * matplotlib (Python) https://matplotlib.org/
* QCustomPlot (QT, GPL/commercial) https://www.qcustomplot.com/

CppCast - CMake and VTK with Robert Maynard
===========================================

http://cppcast.com/2019/07/robert-maynard/

* `Reddit <https://www.reddit.com/r/cpp/comments/c9bpxb/cppcast_cmake_and_vtk_with_robert_maynard/>`_

CMake line by line - creating a header-only library
===================================================

http://dominikberner.ch/cmake-interface-lib/

* `Reddit <https://www.reddit.com/r/cpp/comments/c8ty2h/a_line_by_line_explanation_how_to_create_a/>`_

https://github.com/bernedom/SI

Professional CMake: A Practical Guide, 4th ed., CMake 3.15 https://crascit.com/professional-cmake/ $30

What happens with header-only libraries?
========================================

https://www.reddit.com/r/cpp/comments/d4uu46/what_happens_with_headeronly_libraries/

    Assuming a reasonably-sized project where certain libraries will be required multiple times in different source files...
	What happens with all the in-lines and templates that get compiled in? Are there just multiple copies of each?
	Do modern compilers/linkers trim out the duplicates? Do they leave them in?

https://gcc.gnu.org/onlinedocs/gcc-9.1.0/gcc/Template-Instantiation.html

https://github.com/yrnkrn/zapcc

Agner Vector Class Library V2
=============================

This is a C++17 class library for using the Single Instruction Multiple Data (SIMD) instructions in
modern microprocessors.

https://www.agner.org/optimize/blog/read.php?i=1013

https://github.com/vectorclass/version2 (Apache 2.0)

Manual https://github.com/vectorclass/manual/blob/master/vcl_manual.pdf

mdspan
======

* Implementation https://github.com/kokkos/mdspan (BSD 3-Clause)
  * Intro https://github.com/kokkos/mdspan/wiki/A-Gentle-Introduction-to-mdspan
  * r/cpp https://www.reddit.com/r/cpp/comments/cl127i/mdspan_productionquality_reference_implementation/
* Kokkos https://github.com/kokkos/kokkos
* Multi-dimensional strided array views in Magnum
  https://blog.magnum.graphics/backstage/multidimensional-strided-array-views/
* P0009R9 **mdspan**: A Non-Owning Multidimensional Array Reference http://wg21.link/p0009r9
* CppCast with Bryce Adelstein Lelbach https://cppcast.com/bryce-lelbach-mdspan/

Clang Build Analyzer
====================

https://github.com/aras-p/ClangBuildAnalyzer

Machine Learning with CPP
=========================

`Reddit <https://www.reddit.com/r/cpp/comments/cjrrwm/machine_learning_with_cpp/>`_

* PyTorch https://pytorch.org/features -- has a pure C++ front end https://pytorch.org/cppdocs/
* TensorFlow for C++ https://www.tensorflow.org/api_docs/cc
* Shogun https://www.shogun.ml/

The sad history of Unicode printf-style format specifiers in Visual C++
=======================================================================

https://devblogs.microsoft.com/oldnewthing/20190830-00/?p=102823

* `Reddit <https://www.reddit.com/r/cpp/comments/cxi2xy/the_sad_history_of_unicode_printfstyle_format/>`_

Introducing Magnum Python Bindings
==================================

https://blog.magnum.graphics/announcements/introducing-python-bindings/

https://github.com/pybind/pybind11

Are there any memory safety libraries for C++?
==============================================

https://www.reddit.com/r/cpp/comments/d0hguz/are_there_any_memory_safety_libraries_for_c/

https://github.com/duneroadrunner/SaferCPlusPlus/

https://github.com/deplinenoise/ig-memtrace

    MemTrace is a memory debugging tool developed internally at Insomniac Games.

https://github.com/ivmai/bdwgc

    The Boehm-Demers-Weiser conservative C/C++ Garbage Collector (libgc, bdwgc, boehm-gc) https://www.hboehm.info/gc/

AnyDuck : A Value Type Erased Type
==================================

Steve Downey: https://www.sdowney.org/2019/07/anyduck-a-value-type-erased-type/

Twitter
=======

.. image:: img/tvaneerd-try-catch-opt.png
   :width: 90%

Twitter: Generic cup
====================

.. image:: img/generic-cup.png
   :width: 70%

Twitter: Electronics
====================

.. image:: img/electronics.png
