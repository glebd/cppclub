----

Kona Trip Reports
-----------------

* `CppCast: Kona Trip Report with Peter Bindels <http://cppcast.com/2019/02/peter-bindels/>`_
* `Timur Doumler <http://timur.audio/trip-report-february-2019-iso-c-committee-meeting-kona-hawaii>`_
* `Corentin Jabot <https://cor3ntin.github.io/posts/kona2019/>`_ (`Reddit <https://www.reddit.com/r/cpp/comments/aw3x67/kona_a_trip_report/>`_)
  - 177 papers, 144 never seen before
  - One contention point of the Coroutines TS is that it always heap-allocate the type-erased coroutine frame and relies on impressive optimization techniques to make these allocations disappear when the frame does not outlive the caller’s context. The Core Coroutine proposal offered deterministic stack allocations of coroutines frames. The issue with having the coroutine frame allocated on the stack is that it can not be optimized away without black magic. That black magic now has a name: Deferred layout. (Deemed very complex to implement by compiler vendors.)
  - https://github.com/lewissbaker/cppcoro
  - https://github.com/luncliff/coroutine
  - There will be a paper in the post-mailling which offer a great way to use ``await`` and ``yield`` as keyword without breaking any existing code.
  - Voted against Modules.

Are C++ Modules Dead-on-Arrival?
--------------------------------

* https://vector-of-bool.github.io/2019/03/04/modules-doa-2.html
* https://www.reddit.com/r/cpp/comments/ax81zs/are_modules_doa_a_followup/

This is a follow-up to `C++ Modules might be Dead-on-Arrival <https://vector-of-bool.github.io/2019/01/27/modules-doa.html>`_.

    We can deduce the answer from Betteridge’s law of headlines: No.

    First and foremost, let me get this out of the way: I do not want C++ modules to fail. I do not know of anyone who wishes for them to crash and burn. I do know people with serious concerns about modules. The purpose of these posts is not to shoot down the modules work, but to make our skeptical voices heard.

Gabriel Dos Reis:

    A lot of harm has been done with incomplete understandings or misunderstandings presented as flaws in the modules design.

CMake + GCC module proof-of-concept
-----------------------------------

https://www.reddit.com/r/cpp/comments/axnwiz/cmake_gcc_module_proofofconcept/

    Hi all, CMake developer here. There's been a lot of noise and discussion of modules recently, particularly with respect to how build systems will deal with it. There has been **build2** for quite a while, but it was also designed with modules in mind.

    At Kona last week, I worked with Nathan Sidwell who is working on GCC's module support to get a minimally viable proof-of-concept for CMake building modules.

Twitter bot that posts updates when compilers add support for new features
--------------------------------------------------------------------------

* https://twitter.com/CompilerCpp/status/1102565726970363904
* Programmed in Go
* https://github.com/therocode/CppCompilerCompliance

CppCon 2018 - Mark Elendt - Dangling in French and English
----------------------------------------------------------

https://youtu.be/jieYLTcmTS0

.. image:: img/elendt-dangling-1.png

CppCon 2018 - Mark Elendt - Dangling in French and English
----------------------------------------------------------

https://youtu.be/jieYLTcmTS0

.. image:: img/elendt-dangling-2.png

C++ On Sea 2019 - Walter E. Brown - C++ Function Templates: How Do They Really Work?
------------------------------------------------------------------------------------

https://youtu.be/nfIX8yWlByY

.. image:: img/brown-fn-templ-1.png

C++ On Sea 2019 - Walter E. Brown - C++ Function Templates: How Do They Really Work?
------------------------------------------------------------------------------------

https://youtu.be/nfIX8yWlByY

.. image:: img/brown-fn-templ-2.png

C++ On Sea 2019 - Walter E. Brown - C++ Function Templates: How Do They Really Work?
------------------------------------------------------------------------------------

https://youtu.be/nfIX8yWlByY

.. image:: img/brown-fn-templ-3.png

C++ On Sea 2019 - Walter E. Brown - C++ Function Templates: How Do They Really Work?
------------------------------------------------------------------------------------

https://youtu.be/nfIX8yWlByY

.. image:: img/brown-fn-templ-4.png

C++ On Sea 2019 - Walter E. Brown - C++ Function Templates: How Do They Really Work?
------------------------------------------------------------------------------------

https://youtu.be/nfIX8yWlByY

.. image:: img/brown-fn-templ-5.png

C++ On Sea 2019 - Walter E. Brown - C++ Function Templates: How Do They Really Work?
------------------------------------------------------------------------------------

https://youtu.be/nfIX8yWlByY

.. image:: img/brown-fn-templ-6.png

C++ On Sea 2019 - Walter E. Brown - C++ Function Templates: How Do They Really Work?
------------------------------------------------------------------------------------

https://youtu.be/nfIX8yWlByY

.. image:: img/brown-fn-templ-7.png

C++ On Sea 2019 - Walter E. Brown - C++ Function Templates: How Do They Really Work?
------------------------------------------------------------------------------------

https://youtu.be/nfIX8yWlByY

.. image:: img/brown-fn-templ-8.png

C++ On Sea 2019 - Walter E. Brown - C++ Function Templates: How Do They Really Work?
------------------------------------------------------------------------------------

https://youtu.be/nfIX8yWlByY

.. image:: img/brown-fn-templ-9.png

C++ On Sea 2019 - Walter E. Brown - C++ Function Templates: How Do They Really Work?
------------------------------------------------------------------------------------

https://youtu.be/nfIX8yWlByY

.. image:: img/brown-fn-templ-10.png

C++ On Sea 2019 - Walter E. Brown - C++ Function Templates: How Do They Really Work?
------------------------------------------------------------------------------------

https://youtu.be/nfIX8yWlByY

.. image:: img/brown-fn-templ-11.png

C++ On Sea 2019 - Walter E. Brown - C++ Function Templates: How Do They Really Work?
------------------------------------------------------------------------------------

https://youtu.be/nfIX8yWlByY

.. image:: img/brown-fn-templ-12.png

C++ On Sea 2019 - Walter E. Brown - C++ Function Templates: How Do They Really Work?
------------------------------------------------------------------------------------

https://youtu.be/nfIX8yWlByY

.. image:: img/brown-fn-templ-13.png

C++ On Sea 2019 - Walter E. Brown - C++ Function Templates: How Do They Really Work?
------------------------------------------------------------------------------------

https://youtu.be/nfIX8yWlByY

.. image:: img/brown-fn-templ-14.png

C++ On Sea 2019 - Walter E. Brown - C++ Function Templates: How Do They Really Work?
------------------------------------------------------------------------------------

https://youtu.be/nfIX8yWlByY

.. image:: img/brown-fn-templ-15.png

C++ On Sea 2019 - Walter E. Brown - C++ Function Templates: How Do They Really Work?
------------------------------------------------------------------------------------

https://youtu.be/nfIX8yWlByY

.. image:: img/brown-fn-templ-16.png

C++ On Sea 2019 - Walter E. Brown - C++ Function Templates: How Do They Really Work?
------------------------------------------------------------------------------------

https://youtu.be/nfIX8yWlByY

.. image:: img/brown-fn-templ-17.png

C++ On Sea 2019 - Walter E. Brown - C++ Function Templates: How Do They Really Work?
------------------------------------------------------------------------------------

https://youtu.be/nfIX8yWlByY

.. image:: img/brown-fn-templ-18.png

C++ On Sea 2019 - Walter E. Brown - C++ Function Templates: How Do They Really Work?
------------------------------------------------------------------------------------

https://youtu.be/nfIX8yWlByY

.. image:: img/brown-fn-templ-19.png

C++ On Sea 2019 - Walter E. Brown - C++ Function Templates: How Do They Really Work?
------------------------------------------------------------------------------------

https://youtu.be/nfIX8yWlByY

.. image:: img/brown-fn-templ-20.png

C++ On Sea 2019 - Walter E. Brown - C++ Function Templates: How Do They Really Work?
------------------------------------------------------------------------------------

https://youtu.be/nfIX8yWlByY

.. image:: img/brown-fn-templ-21.png

C++ On Sea 2019 - Walter E. Brown - C++ Function Templates: How Do They Really Work?
------------------------------------------------------------------------------------

https://youtu.be/nfIX8yWlByY

.. image:: img/brown-fn-templ-22.png

C++ On Sea 2019 - Walter E. Brown - C++ Function Templates: How Do They Really Work?
------------------------------------------------------------------------------------

https://youtu.be/nfIX8yWlByY

.. image:: img/brown-fn-templ-23.png

C++ On Sea 2019 - Walter E. Brown - C++ Function Templates: How Do They Really Work?
------------------------------------------------------------------------------------

https://youtu.be/nfIX8yWlByY

.. image:: img/brown-fn-templ-24.png

C++ On Sea 2019 - Walter E. Brown - C++ Function Templates: How Do They Really Work?
------------------------------------------------------------------------------------

https://youtu.be/nfIX8yWlByY

.. image:: img/brown-fn-templ-25.png

C++ On Sea 2019 - Walter E. Brown - C++ Function Templates: How Do They Really Work?
------------------------------------------------------------------------------------

https://youtu.be/nfIX8yWlByY

.. image:: img/brown-fn-templ-26.png

C++ On Sea 2019 - Walter E. Brown - C++ Function Templates: How Do They Really Work?
------------------------------------------------------------------------------------

https://youtu.be/nfIX8yWlByY

.. image:: img/brown-fn-templ-27.png

C++ On Sea 2019 - Walter E. Brown - C++ Function Templates: How Do They Really Work?
------------------------------------------------------------------------------------

https://youtu.be/nfIX8yWlByY

.. image:: img/brown-fn-templ-28.png

C++ On Sea 2019 - Walter E. Brown - C++ Function Templates: How Do They Really Work?
------------------------------------------------------------------------------------

https://youtu.be/nfIX8yWlByY

.. image:: img/brown-fn-templ-29.png

What is the Strict Aliasing Rule and Why do we care?
----------------------------------------------------

(OR Type Punning, Undefined Behavior and Alignment, Oh My!)

https://gist.github.com/shafik/848ae25ee209f698763cffee272a58f8

Moving iterators in C++
-----------------------

https://cukic.co/2019/02/09/moving-iterators-in-cxx/

    ``std::move_iterator`` is an iterator adaptor which behaves exactly like the underlying iterator, except that dereferencing converts the value returned by the underlying iterator into an *rvalue*. (https://en.cppreference.com/w/cpp/iterator/move_iterator)

.. code:: c++

    std::vector<fs::directory_entry> results;
    auto dir_items = files_in_dir(...);
    results.insert(results.end(), dir_items.cbegin(), dir_items.cend());

Low-cost Deterministic C++ Exceptions for Embedded Systems
----------------------------------------------------------

https://www.research.ed.ac.uk/portal/files/78829292/low_cost_deterministic_C_exceptions_for_embedded_systems.pdf

James Renwick, Tom Spink, Björn Franke (University of Edinburgh)

    In our novel C++ exception implementation we make use of a stack-allocated object that records the necessary run-time information for throwing an exception, such as the type and size of the exception object. This state is allocated in a single place and is passed between functions via an implicit function parameter injected into functions which support exceptions. The state is initialised by ``throw`` expressions, and is re-used to enable re-throwing. ``catch`` statements use the state in order to determine whether they can handle the exception. After a call to a function which may throw exceptions, a run-time check is inserted to test whether the state containsan active exception.

Fast_ber: ASN.1 BER serialization library
-----------------------------------------

* https://github.com/Samuel-Tyler/fast_ber
* https://www.reddit.com/r/cpp/comments/anwlrs/fast_ber_asn1_ber_serialization_library_written/
* https://en.wikipedia.org/wiki/Abstract_Syntax_Notation_One

C++, it’s not you. It’s me.
---------------------------

Blog post: https://c0de517e.blogspot.com/2019/02/c-its-not-you-its-me.html

    The crux of the issue <...> is the growing disconnect between people woking on big, complex, performance-sensitive and often monolithic and legacy-ridden codebases that we find in game development, and the ideas of "modernity” of the C++ standard community.

`Reddit <https://www.reddit.com/r/cpp/comments/av8mmz/c_its_not_you_its_me/>`_

    I'm just going to throw it out there: I'm tired of reading this kind of stuff from game devs. There's just so much of this kind of stuff.

    Acting like they are the only ones with performance issues. The only ones with complex codebases. The only ones who actually ship code. The ones who are just solving more unique and difficult problems than anyone else, for which c++ falls short by more.

Formatting user-defined types with {fmt} library
------------------------------------------------

https://wgml.pl/blog/formatting-user-defined-types-fmt.html

Don’t Use ``std::endl``
-----------------------

https://accu.org/index.php/journals/2619

Eventual consistency
--------------------

.. image:: img/eventual-consistency.png
   :width: 960 px
   :height: 928 px
   :scale: 30 %

Twitter
-------

.. image:: img/cpp-grey-hair.png
